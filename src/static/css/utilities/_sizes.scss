@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $size, $length in map-merge((
      10: 10%,
      20: 20%,
      25: 25%,
      30: 30%,
      40: 40%,
      50: 50%,
      60: 60%,
      70: 70%,
      75: 75%,
      80: 80%,
      90: 90%,
      100: 100%,
      auto: auto
    ), $grid-breakpoints) {
      // width / height / min-width / min-height / max-width / max-height
      @each $prop, $abbrev in (width: w, height: h, min-width: min-w, min-height: min-h, max-width: mw, max-height: mh) {
        .#{$abbrev}#{$infix}-#{$size} {
          #{$prop}: $length !important;
        }
      }

      // viewport: width / height / min-width / min-height / max-width / max-height
      //  https://css-tricks.com/the-trick-to-viewport-units-on-mobile/
      @each $prop, $abbrev in (width: vw, height: vh) {
        .#{$abbrev}#{$infix}-#{$size} {
          #{$prop}: #{$size}#{$abbrev} !important;
          #{$prop}: calc(var(--#{$abbrev}, 1#{$abbrev}) * #{$size}) !important;
        }
        .min-#{$abbrev}#{$infix}-#{$size} {
          min-#{$prop}: #{$size}#{$abbrev} !important;
          min-#{$prop}: calc(var(--#{$abbrev}, 1#{$abbrev}) * #{$size}) !important;
        }
        .max-#{$abbrev}#{$infix}-#{$size} {
          max-#{$prop}: #{$size}#{$abbrev} !important;
          max-#{$prop}: calc(var(--#{$abbrev}, 1#{$abbrev}) * #{$size}) !important;
        }
      }
    }

    // https://stackoverflow.com/a/31944059
    .fill#{$infix} {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
}
