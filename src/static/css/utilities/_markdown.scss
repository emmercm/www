@use "sass:math";

.markdown {
  h1, .h1 {
    margin-top: $h1-font-size * 1.5;
    margin-bottom: max($h1-font-size * 2/3, $font-size-base);
  }
  h2, .h2 {
    margin-top: $h2-font-size * 1.5;
    margin-bottom: max($h2-font-size * 2/3, $font-size-base);
  }
  h3, .h3 {
    margin-top: $h3-font-size * 1.5;
    margin-bottom: max($h3-font-size * 2/3, $font-size-base);
  }
  h4, .h4 {
    margin-top: $h4-font-size * 1.5;
    margin-bottom: max($h4-font-size * 2/3, $font-size-base);
  }
  h5, .h5 {
    margin-top: $h5-font-size * 1.5;
    margin-bottom: max($h5-font-size * 2/3, $font-size-base);
  }
  h6, .h6 {
    margin-top: $h6-font-size * 1.5;
    margin-bottom: max($h6-font-size * 2/3, $font-size-base);
  }

  h1, h2,
  .h1, .h2 {
    //padding-bottom: $headings-margin-bottom/2;
    //border-bottom: $border-width*2 solid lighten(if($headings-color, $headings-color, $body-color), 35%);
  }

  h1, h2, h3, h4, h5, h6,
  .h1, .h2, .h3, .h4, .h5, .h6 {
    //&::before {
    //  // https://stackoverflow.com/a/28824157
    //  content: "";
    //  display: block;
    //  height: $navbar-height;
    //  margin-top: $navbar-height * -1;
    //}
    .link {
      float: left;
      margin-left: $font-size-base * -1.5;
      // padding-right: $font-size-base * 0.5;
      line-height: 1;
      & > * {
        opacity: 0;
        @include font-size($font-size-base);
        vertical-align: middle;
      }
    }
    &:hover {
      .link {
        & > * {
          opacity: 1;
        }
      }
    }
  }

  blockquote {
    padding: math.div($spacer, 2) $spacer;
    border-left: $border-width*4 solid lighten(if($headings-color, $headings-color, $body-color), 35%);
    font-style: italic;
  }

  $ul-padding: 2.5em;  // equals browser default of 40px
  ul {
    padding-left: $ul-padding;
  }
  li {
    margin-top: map-get($spacers, 0);
    margin-bottom: map-get($spacers, 0);
    & > pre {
      @media (min-width: map-get($grid-breakpoints, "md")) {
        margin-right: $ul-padding;
      }
    }
  }

  .bg-light {
    svg.mermaid {
      .label text,
      .label,
      span {
        color: $body-color !important;
      }

      // @mixin table-variant
      $table-background: map-get($table-variants, 'dark');
      $table-color: color-contrast(opaque($body-bg, $table-background));
      $table-striped-bg: mix($table-color, $table-background, percentage($table-striped-bg-factor));

      // erDiagram
      .entityBox {
        fill: $table-background !important;
        stroke: mix($table-color, $table-background, percentage($table-border-factor)) !important;
      }
      .attributeBoxOdd {
        fill: $light !important;
        stroke: $dark !important;
      }
      .attributeBoxEven {
        fill: darken($light, $table-striped-bg-factor * 100) !important;
        stroke: $dark !important;
      }

      // Get rid of colored rectangles behind line labels
      .edgeLabel,
      .relationshipLabelBox {
        background-color: $light !important;
        fill: $light !important;
        opacity: 1 !important;
      }
    }

    svg.vega {
      width: 100%;
      height: auto;

      text {
        fill: $body-color;
      }

      .background {
        stroke: none;
      }

      // Axis lines
      .role-axis-domain line,
      .role-axis-grid line:first-of-type {
        stroke: $dark;
      }

      // Grid lines
      //.role-frame path,
      .role-axis-grid line:not(:first-of-type) {
        stroke: mix($light, $dark, 75%);
      }

      // Grid ticks
      .role-axis-tick line {
        stroke: mix($light, $dark);
      }

      // Lines
      .mark-group > g {
        &:first-of-type .mark-line path {
          stroke: $primary;
        }
        &:not(:first-of-type) .mark-line path {
          stroke: $secondary;
        }
      }

      // Line dots
      .mark-symbol.role-mark path {
        &:first-of-type {
          stroke: $primary;
          fill: $primary;
        }
        &:not(:first-of-type) {
          stroke: $secondary;
          fill: $secondary;
        }
      }
    }
  }
}
