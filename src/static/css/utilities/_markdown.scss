@use "sass:math";

.markdown {
  h1, .h1 {
    margin-top: $h1-font-size * 1.5;
    margin-bottom: max($h1-font-size * 2/3, $font-size-base);
  }
  h2, .h2 {
    margin-top: $h2-font-size * 1.5;
    margin-bottom: max($h2-font-size * 2/3, $font-size-base);
  }
  h3, .h3 {
    margin-top: $h3-font-size * 1.5;
    margin-bottom: max($h3-font-size * 2/3, $font-size-base);
  }
  h4, .h4 {
    margin-top: $h4-font-size * 1.5;
    margin-bottom: max($h4-font-size * 2/3, $font-size-base);
  }
  h5, .h5 {
    margin-top: $h5-font-size * 1.5;
    margin-bottom: max($h5-font-size * 2/3, $font-size-base);
  }
  h6, .h6 {
    margin-top: $h6-font-size * 1.5;
    margin-bottom: max($h6-font-size * 2/3, $font-size-base);
  }

  h1, h2,
  .h1, .h2 {
    //padding-bottom: $headings-margin-bottom/2;
    //border-bottom: $border-width solid lighten(if($headings-color, $headings-color, $body-color), 35%);
  }

  h1, h2, h3, h4, h5, h6,
  .h1, .h2, .h3, .h4, .h5, .h6 {
    //&::before {
    //  // https://stackoverflow.com/a/28824157
    //  content: "";
    //  display: block;
    //  height: $navbar-height;
    //  margin-top: $navbar-height * -1;
    //}
    .link {
      float: left;
      margin-left: $font-size-base * -1.5;
      // padding-right: $font-size-base * 0.5;
      line-height: 1;
      & > * {
        opacity: 0;
        font-size: 75%;
        vertical-align: middle;
      }
    }
    &:hover {
      .link {
        & > * {
          opacity: 1;
        }
      }
    }
  }

  blockquote {
    margin-left: -$border-width*10 - $border-width*2;
    padding-left: $border-width*10;
    border-left: $border-width*2 solid var(--#{$prefix}body-color);
    font-style: italic;
  }

  $ul-padding: 1.875em;
  ul {
    padding-left: $ul-padding;
  }
  li {
    margin-top: map-get($spacers, 0);
    margin-bottom: map-get($spacers, 0);
    & > pre {
      @media (min-width: map-get($grid-breakpoints, "md")) {
        margin-right: $ul-padding;
      }
    }
  }
  li > p {
    // <li> will have <p> children when it or one of its <li> siblings has a nested <ul>
    & + ul {
      margin-bottom: $spacer;
    }
  }

  svg.mermaid {
    // erDiagram
    .entityBox,
    .attributeBoxOdd,
    .attributeBoxEven {
      stroke: var(--#{$prefix}secondary-color) !important;
    }
    .entityBox {
      fill: var(--#{$prefix}secondary-bg-subtle) !important;
    }
    .attributeBoxOdd {
      fill: var(--#{$prefix}secondary-bg) !important;
    }
    .attributeBoxEven {
      fill: var(--#{$prefix}secondary-border-subtle) !important;
    }
    .entityLabel {
      fill: var(--#{$prefix}body-color) !important;
    }
    .relationshipLine {
      stroke: var(--#{$prefix}secondary-color) !important;
    }
    marker * {
      stroke: var(--#{$prefix}secondary-color) !important;
    }
    .relationshipLabelBox {
      fill: var(--#{$prefix}body-bg) !important;
      opacity: 1.0 !important;
    }
    .relationshipLabel {
      fill: var(--#{$prefix}body-color) !important;
    }

    // flowchart
    .node {
      rect, circle, ellipse, polygon, path {
        fill: var(--#{$prefix}secondary-bg-subtle) !important;
        stroke: var(--#{$prefix}secondary-color) !important;
      }
      .nodeLabel {
        color: var(--#{$prefix}body-color) !important;
      }
    }
    .flowchart-link {
      stroke: var(--#{$prefix}secondary-color) !important;
    }
    marker.flowchart * {
      fill: var(--#{$prefix}secondary-color) !important;
      stroke: var(--#{$prefix}secondary-color) !important;
    }
    .edgeLabel {
      color: var(--#{$prefix}body-color) !important;
      background-color: var(--#{$prefix}body-bg) !important;
    }
  }

  svg.vega {
    width: 100%;
    height: auto;

    text {
      fill: var(--#{$prefix}body-color) !important;
    }

    .background {
      stroke: none;
    }

    // Axis lines
    .role-axis-domain line,
    .role-axis-grid line:first-of-type,
    // Grid ticks
    .role-axis-tick line {
      stroke: var(--#{$prefix}dark);
    }

    // Grid lines
    //.role-frame path,
    .role-axis-grid line:not(:first-of-type) {
      stroke: var(--#{$prefix}secondary-border-subtle);
    }

    // Lines
    .mark-group > g {
      &:first-of-type .mark-line path {
        stroke: var(--#{$prefix}primary);
      }
      &:not(:first-of-type) .mark-line path {
        stroke: var(--#{$prefix}secondary);
      }
    }

    // Line dots
    .mark-symbol.role-mark path {
      &:first-of-type {
        stroke: var(--#{$prefix}primary);
        fill: var(--#{$prefix}primary);
      }
      &:not(:first-of-type) {
        stroke: var(--#{$prefix}secondary);
        fill: var(--#{$prefix}secondary);
      }
    }
  }
}
